{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\OneDrive\\\\Desktop\\\\React\\\\quizapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport QuestionBox from './Components/QuestionBox';\nimport Result from './Components/Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const quizapi = [{\n    question: \"What is karthik's age?\",\n    answer: [21, 22, 20, 19],\n    correct: 21\n  }, {\n    question: \"What is karthik's surname?\",\n    answer: [\"Yadav\", \"Konar\", \"shetty\", \"nadar\"],\n    correct: \"Yadav\"\n  }, {\n    question: \"What is karthik's birthday ?\",\n    answer: [13, 14, 15, 10],\n    correct: 13\n  }, {\n    question: \"What is karthik's mother name?\",\n    answer: [\"Jaya\", \"Usha\", \"Pavithra\", \"Maya\"],\n    correct: \"Jaya\"\n  }];\n  const [question, setQuestion] = useState(quizapi);\n  const [score, setScore] = useState(0);\n  const [response, setResponse] = useState(0);\n  /*console.log(question)*/\n\n  const scoreval = (ans, correct) => {\n    if (ans === correct) {\n      setScore(score + 1);\n    }\n\n    setResponse(response + 1);\n  };\n\n  const playAgain = () => {\n    setScore(0);\n    setResponse(0);\n  };\n\n  console.log(\"Score:\" + score);\n  console.log(\"Response:\" + response);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Karthik's QuizBee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [response < 4 && question.map((_ref, index) => {\n        let {\n          question,\n          answer,\n          correct\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(QuestionBox, {\n          question: question,\n          option: answer,\n          selected: ans => scoreval(ans, correct)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this);\n      }), response === 4 ? /*#__PURE__*/_jsxDEV(Result, {\n        score: score,\n        playAgain: playAgain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"zmlB4+GH3QseojXd2mhyEOZS2oc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/karth/OneDrive/Desktop/React/quizapp/src/App.js"],"names":["React","useState","QuestionBox","Result","App","quizapi","question","answer","correct","setQuestion","score","setScore","response","setResponse","scoreval","ans","playAgain","console","log","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,QAAQ,EAAC,wBADX;AAEEC,IAAAA,MAAM,EAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,CAFT;AAGEC,IAAAA,OAAO,EAAC;AAHV,GADc,EAMd;AACEF,IAAAA,QAAQ,EAAC,4BADX;AAEEC,IAAAA,MAAM,EAAC,CAAC,OAAD,EAAS,OAAT,EAAiB,QAAjB,EAA0B,OAA1B,CAFT;AAGEC,IAAAA,OAAO,EAAC;AAHV,GANc,EAWd;AACEF,IAAAA,QAAQ,EAAC,8BADX;AAEEC,IAAAA,MAAM,EAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,CAFT;AAGEC,IAAAA,OAAO,EAAC;AAHV,GAXc,EAgBd;AACEF,IAAAA,QAAQ,EAAC,gCADX;AAEEC,IAAAA,MAAM,EAAC,CAAC,MAAD,EAAQ,MAAR,EAAe,UAAf,EAA0B,MAA1B,CAFT;AAGEC,IAAAA,OAAO,EAAC;AAHV,GAhBc,CAAhB;AAsBA,QAAM,CAACF,QAAD,EAAUG,WAAV,IAAyBR,QAAQ,CAACI,OAAD,CAAvC;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACW,QAAD,EAAUC,WAAV,IAAyBZ,QAAQ,CAAC,CAAD,CAAvC;AACA;;AACA,QAAMa,QAAQ,GAAG,CAACC,GAAD,EAAKP,OAAL,KAAe;AAC9B,QAAGO,GAAG,KAAGP,OAAT,EAAiB;AACbG,MAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACH;;AACDG,IAAAA,WAAW,CAACD,QAAQ,GAAC,CAAV,CAAX;AACD,GALD;;AAMA,QAAMI,SAAS,GAAC,MAAI;AAClBL,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,CAAD,CAAX;AACD,GAHD;;AAIAI,EAAAA,OAAO,CAACC,GAAR,CAAY,WAASR,KAArB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAYN,QAAxB;AACA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,iBACGA,QAAQ,GAAG,CAAX,IAAgBN,QAAQ,CAACa,GAAT,CAAa,OAA2BC,KAA3B;AAAA,YAAC;AAACd,UAAAA,QAAD;AAAUC,UAAAA,MAAV;AAAiBC,UAAAA;AAAjB,SAAD;AAAA,4BAC9B,QAAC,WAAD;AAA0B,UAAA,QAAQ,EAAEF,QAApC;AAA8C,UAAA,MAAM,EAAEC,MAAtD;AAA8D,UAAA,QAAQ,EAAEQ,GAAG,IAAID,QAAQ,CAACC,GAAD,EAAKP,OAAL;AAAvF,WAAmBY,KAAnB;AAAA;AAAA;AAAA;AAAA,gBAD8B;AAAA,OAAb,CADnB,EAIGR,QAAQ,KAAK,CAAb,gBAAiB,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEF,KAAf;AAAsB,QAAA,SAAS,EAAEM;AAAjC;AAAA;AAAA;AAAA;AAAA,cAAjB,GAA+D,IAJlE;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAaD;;GApDQZ,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport QuestionBox from './Components/QuestionBox';\nimport Result from './Components/Result';\n\nfunction App() {\n  const quizapi = [\n    {\n      question:\"What is karthik's age?\",\n      answer:[21,22,20,19],\n      correct:21\n    },\n    {\n      question:\"What is karthik's surname?\",\n      answer:[\"Yadav\",\"Konar\",\"shetty\",\"nadar\"],\n      correct:\"Yadav\"\n    },\n    {\n      question:\"What is karthik's birthday ?\",\n      answer:[13,14,15,10],\n      correct:13\n    },\n    {\n      question:\"What is karthik's mother name?\",\n      answer:[\"Jaya\",\"Usha\",\"Pavithra\",\"Maya\"],\n      correct:\"Jaya\"\n    }\n  ]\n  const [question,setQuestion] = useState(quizapi)\n  const [score,setScore] = useState(0)\n  const [response,setResponse] = useState(0)\n  /*console.log(question)*/\n  const scoreval = (ans,correct)=>{\n    if(ans===correct){\n        setScore(score+1)\n    }\n    setResponse(response+1)\n  }\n  const playAgain=()=>{\n    setScore(0)\n    setResponse(0)\n  }\n  console.log(\"Score:\"+score)\n  console.log(\"Response:\"+response)\n  return (\n    <>\n    <h1>Karthik's QuizBee</h1>\n    <div>\n      {response < 4 && question.map(({question,answer,correct},index)=>\n      <QuestionBox key ={index} question={question} option={answer} selected={ans => scoreval(ans,correct)}/>\n      )}\n      {response === 4 ? <Result score={score} playAgain={playAgain}/>:null}\n    </div>\n    </>\n    \n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}